import 'package:flutter/foundation.dart';
import 'package:get_it/get_it.dart';
import 'package:go_router/go_router.dart';
import 'package:turbo_template/routing/abstracts/base_navigation.dart';
import 'package:turbo_template/routing/enums/navigation_tab.dart';
import 'package:turbo_template/data/extensions/string_extension.dart';
import 'package:turbo_template/state/views/placeholder/placeholder_view.dart';

class PlaceholderRouter extends BaseNavigation {
  // üìç LOCATOR ------------------------------------------------------------------------------- \\

  static PlaceholderRouter get locate => GetIt.I.get();
  static void registerFactory() => GetIt.I.registerFactory(PlaceholderRouter.new);

  // üß© DEPENDENCIES -------------------------------------------------------------------------- \\
  // üé¨ INIT & DISPOSE ------------------------------------------------------------------------ \\
  // üëÇ LISTENERS ----------------------------------------------------------------------------- \\
  // ‚ö°Ô∏è OVERRIDES ----------------------------------------------------------------------------- \\

  @override
  NavigationTab? get navigationTab => NavigationTab.placeholder;

  @override
  String get root => PlaceholderView.path.asRootPath;

  // üé© STATE --------------------------------------------------------------------------------- \\
  // üõ† UTIL ---------------------------------------------------------------------------------- \\
  // üß≤ FETCHERS ------------------------------------------------------------------------------ \\
  // üèóÔ∏è HELPERS ------------------------------------------------------------------------------- \\
  // ü™Ñ MUTATORS ------------------------------------------------------------------------------ \\

  void goPlaceholderView({
    StatefulNavigationShell? statefulNavigationShell,
  }) {
    if (statefulNavigationShell != null) {
      goBranch(
        statefulNavigationShell: statefulNavigationShell,
      );
      if (kIsWeb) {
        // bug
        goBranch(
          statefulNavigationShell: statefulNavigationShell,
        );
      }
    } else {
      go(
        location: root,
        extra: const [],
      );
    }
  }
}
